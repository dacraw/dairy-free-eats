type AutomaticTax {
  enabled: Boolean!
  liability: JSON
  status: String
}

"""
Based on https://docs.stripe.com/api/checkout/sessions/object
"""
type CheckoutSession {
  amountSubtotal: Int
  amountTotal: Int
  automaticTax: AutomaticTax!
  billingAddressCollection: String
  cancelUrl: String
  clientReferenceId: String
  created: ISO8601DateTime!
  currency: String
  customer: String
  customerDetails: CustomerDetails
  customerEmail: String
  id: String!
  lineItems: LineItemListObject!
  livemode: Boolean!
  locale: String
  metadata: JSON
  mode: String!
  paymentIntent: String
  paymentMethodCollection: String
  paymentMethodTypes: [String!]!
  paymentStatus: String!
  stripeObject: String!
  successUrl: String!
  totalDetails: TotalDetails!
  url: String!
}

type CustomerAddress {
  city: String
  country: String
  line1: String
  line2: String
  postalCode: String
  state: String
}

type CustomerDetails {
  address: CustomerAddress
  email: String
  name: String
  phone: String
  taxExempt: String
  taxIds: [JSON!]
}

"""
Autogenerated input type of DemoAdminSessionCreate
"""
input DemoAdminSessionCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DemoAdminSessionCreate.
"""
type DemoAdminSessionCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [Error!]!
  user: User
}

"""
Generic error type
"""
type Error {
  message: String!
  path: [String!]
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

"""
Represents untyped JSON
"""
scalar JSON

type LineItem {
  amountTotal: Int!
  description: String!
  id: String!
  quantity: Int!
  stripeObject: String!
}

type LineItemListObject {
  data: [LineItem!]
  hasMore: Boolean!
  stripeObject: String!
  url: String!
}

type Mutation {
  """
  Creates a new session
  """
  demoAdminSessionCreate(
    """
    Parameters for DemoAdminSessionCreate
    """
    input: DemoAdminSessionCreateInput!
  ): DemoAdminSessionCreatePayload

  """
  Creates a new session
  """
  sessionCreate(
    """
    Parameters for SessionCreate
    """
    input: SessionCreateInput!
  ): SessionCreatePayload!

  """
  Logs the current user out
  """
  sessionDelete(
    """
    Parameters for SessionDelete
    """
    input: SessionDeleteInput!
  ): SessionDeletePayload
  setOrderStatus(
    """
    Parameters for SetOrderStatus
    """
    input: SetOrderStatusInput!
  ): SetOrderStatusPayload

  """
  Creates a new stripe_checkout_session
  """
  stripeCheckoutSessionCreate(
    """
    Parameters for StripeCheckoutSessionCreate
    """
    input: StripeCheckoutSessionCreateInput!
  ): StripeCheckoutSessionCreatePayload

  """
  Creates a new user
  """
  userCreate(
    """
    Parameters for UserCreate
    """
    input: UserCreateInput!
  ): UserCreatePayload
}

type Order {
  createdAt: ISO8601DateTime!
  guestEmail: String
  id: ID!
  status: OrderStatus!
  stripeCheckoutSessionLineItems: [OrderLineItem!]!
  stripePaymentIntentId: String!
  updatedAt: ISO8601DateTime!
  user: User
}

type OrderLineItem {
  name: String!
  quantity: Int!
}

input OrderPageInput {
  price: String!
  quantity: Int
}

"""
Possible order statuses
"""
enum OrderStatus {
  """
  Active status means the order is being prepared
  """
  active

  """
  Order is cancelled and cannot be re-activated
  """
  cancelled

  """
  Order has been delivered successfully
  """
  completed

  """
  Order is being delivered to the customer
  """
  in_transit

  """
  Orders are set to received when first created, and are not being processed
  """
  received
}

input OrderStatusInput {
  id: ID!
  status: OrderStatus!
}

type Product {
  active: Boolean!
  attributes: [String]!
  created: ISO8601DateTime!
  defaultPrice: String!
  description: String!
  id: String!
  images: [String]!
  livemode: Boolean!
  marketingFeatures: JSON!
  metadata: JSON!
  name: String!
  packageDimensions: JSON
  shippable: Boolean
  statementDescriptor: String
  stripeObject: String!
  taxCode: String!
  type: String!
  unitLabel: String
  updated: ISO8601DateTime!
  url: String
}

type ProductListObject {
  data: [Product!]
  hasMore: Boolean!
  stripeObject: String!
  url: String!
}

type Query {
  currentUser: User
  fetchCheckoutSession(id: ID!): CheckoutSession
  listProducts: ProductListObject!
  orders: [Order!]
  retrieveProduct(productId: String!): Product
}

"""
Autogenerated input type of SessionCreate
"""
input SessionCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  sessionInput: SessionInput!
}

"""
Autogenerated return type of SessionCreate.
"""
type SessionCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [Error!]!
  redirectUrl: String!
  user: User
}

"""
Autogenerated input type of SessionDelete
"""
input SessionDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of SessionDelete.
"""
type SessionDeletePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [Error!]!
  user: User
}

input SessionInput {
  email: String!
  password: String!
}

"""
Autogenerated input type of SetOrderStatus
"""
input SetOrderStatusInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  setOrderStatusInputType: OrderStatusInput!
}

"""
Autogenerated return type of SetOrderStatus.
"""
type SetOrderStatusPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  order: Order!
}

"""
Autogenerated input type of StripeCheckoutSessionCreate
"""
input StripeCheckoutSessionCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  stripeCheckoutSessionInput: StripeCheckoutSessionInput!
}

"""
Autogenerated return type of StripeCheckoutSessionCreate.
"""
type StripeCheckoutSessionCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [Error!]!
  stripeCheckoutSession: CheckoutSession
}

input StripeCheckoutSessionInput {
  lineItems: [OrderPageInput!]!
}

type TotalDetails {
  amountDiscount: Int!
  amountShipping: Int!
  amountTax: Int!
}

type User {
  admin: Boolean!
  createdAt: ISO8601DateTime!
  email: String!
  id: ID!
  stripeCustomerId: String
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of UserCreate
"""
input UserCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userInput: UserInput!
}

"""
Autogenerated return type of UserCreate.
"""
type UserCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [Error!]!
  user: User
}

input UserInput {
  email: String!
  id: ID
  password: String!
  passwordConfirmation: String!
  stripeCustomerId: String
}
